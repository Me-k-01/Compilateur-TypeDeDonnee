   0  $accept : %entry% $end

   1  start : funDefinition

   2  constant : BCONSTANT
   3           | INTCONSTANT

   4  variable : VAR

   5  parenthesage : PAR_OPEN expression PAR_CLOSE

   6  binary_operation : expression BA_ADD expression
   7                   | expression BA_SUB expression
   8                   | expression BA_MUL expression
   9                   | expression BA_DIV expression
  10                   | expression BA_MOD expression
  11                   | expression BC_EG expression
  12                   | expression BC_SUP_EG expression
  13                   | expression BC_INF_EG expression
  14                   | expression BC_SUP expression
  15                   | expression BC_INF expression
  16                   | expression BC_DIF expression

  17  ifthenelse : IF expression BRACKET_OPEN expression BRACKET_CLOSE ELSE BRACKET_OPEN expression BRACKET_CLOSE

  18  expression : constant
  19             | variable
  20             | parenthesage
  21             | binary_operation
  22             | ifthenelse

  23  stmt : seq
  24       | return_statement
  25       | while_statement
  26       | assign
  27       | selection_statement

  28  stmt2 : return_statement
  29        | while_statement
  30        | assign

  31  assign : VAR EG expression SEMICOLON

  32  seq : stmt stmt

  33  selection_statement : IF PAR_OPEN expression PAR_CLOSE stmt2
  34                      | IF PAR_OPEN expression PAR_CLOSE BRACKET_OPEN stmt BRACKET_CLOSE ELSE BRACKET_OPEN stmt BRACKET_CLOSE

  35  while_statement : WHILE PAR_OPEN expression PAR_CLOSE BRACKET_OPEN stmt BRACKET_CLOSE

  36  return_statement : RETURN expression SEMICOLON

  37  typeD : BoolT
  38        | IntT

  39  varDeclaration : typeD VAR

  40  varListe : varDeclaration
  41           | varDeclaration COMMA varListe

  42  funDeclaration : typeD VAR PAR_OPEN varListe PAR_CLOSE

  43  funDefinition : funDeclaration BRACKET_OPEN stmt BRACKET_CLOSE

  44  %entry% : '\001' start

state 0
	$accept : . %entry% $end  (0)

	'\001'  shift 1
	.  error

	%entry%  goto 2


state 1
	%entry% : '\001' . start  (44)

	BoolT  shift 3
	IntT  shift 4
	.  error

	start  goto 5
	funDefinition  goto 6
	typeD  goto 7
	funDeclaration  goto 8


state 2
	$accept : %entry% . $end  (0)

	$end  accept


state 3
	typeD : BoolT .  (37)

	.  reduce 37


state 4
	typeD : IntT .  (38)

	.  reduce 38


state 5
	%entry% : '\001' start .  (44)

	.  reduce 44


state 6
	start : funDefinition .  (1)

	.  reduce 1


state 7
	funDeclaration : typeD . VAR PAR_OPEN varListe PAR_CLOSE  (42)

	VAR  shift 9
	.  error


state 8
	funDefinition : funDeclaration . BRACKET_OPEN stmt BRACKET_CLOSE  (43)

	BRACKET_OPEN  shift 10
	.  error


state 9
	funDeclaration : typeD VAR . PAR_OPEN varListe PAR_CLOSE  (42)

	PAR_OPEN  shift 11
	.  error


state 10
	funDefinition : funDeclaration BRACKET_OPEN . stmt BRACKET_CLOSE  (43)

	VAR  shift 12
	IF  shift 13
	WHILE  shift 14
	RETURN  shift 15
	.  error

	stmt  goto 16
	seq  goto 17
	return_statement  goto 18
	while_statement  goto 19
	assign  goto 20
	selection_statement  goto 21


state 11
	funDeclaration : typeD VAR PAR_OPEN . varListe PAR_CLOSE  (42)

	BoolT  shift 3
	IntT  shift 4
	.  error

	typeD  goto 22
	varDeclaration  goto 23
	varListe  goto 24


state 12
	assign : VAR . EG expression SEMICOLON  (31)

	EG  shift 25
	.  error


state 13
	selection_statement : IF . PAR_OPEN expression PAR_CLOSE stmt2  (33)
	selection_statement : IF . PAR_OPEN expression PAR_CLOSE BRACKET_OPEN stmt BRACKET_CLOSE ELSE BRACKET_OPEN stmt BRACKET_CLOSE  (34)

	PAR_OPEN  shift 26
	.  error


state 14
	while_statement : WHILE . PAR_OPEN expression PAR_CLOSE BRACKET_OPEN stmt BRACKET_CLOSE  (35)

	PAR_OPEN  shift 27
	.  error


state 15
	return_statement : RETURN . expression SEMICOLON  (36)

	BCONSTANT  shift 28
	INTCONSTANT  shift 29
	VAR  shift 30
	PAR_OPEN  shift 31
	IF  shift 32
	.  error

	constant  goto 33
	variable  goto 34
	parenthesage  goto 35
	expression  goto 36
	binary_operation  goto 37
	ifthenelse  goto 38


state 16
	seq : stmt . stmt  (32)
	funDefinition : funDeclaration BRACKET_OPEN stmt . BRACKET_CLOSE  (43)

	VAR  shift 12
	BRACKET_CLOSE  shift 39
	IF  shift 13
	WHILE  shift 14
	RETURN  shift 15
	.  error

	stmt  goto 40
	seq  goto 17
	return_statement  goto 18
	while_statement  goto 19
	assign  goto 20
	selection_statement  goto 21


state 17
	stmt : seq .  (23)

	.  reduce 23


state 18
	stmt : return_statement .  (24)

	.  reduce 24


state 19
	stmt : while_statement .  (25)

	.  reduce 25


state 20
	stmt : assign .  (26)

	.  reduce 26


state 21
	stmt : selection_statement .  (27)

	.  reduce 27


state 22
	varDeclaration : typeD . VAR  (39)

	VAR  shift 41
	.  error


state 23
	varListe : varDeclaration .  (40)
	varListe : varDeclaration . COMMA varListe  (41)

	COMMA  shift 42
	PAR_CLOSE  reduce 40


state 24
	funDeclaration : typeD VAR PAR_OPEN varListe . PAR_CLOSE  (42)

	PAR_CLOSE  shift 43
	.  error


state 25
	assign : VAR EG . expression SEMICOLON  (31)

	BCONSTANT  shift 28
	INTCONSTANT  shift 29
	VAR  shift 30
	PAR_OPEN  shift 31
	IF  shift 32
	.  error

	constant  goto 33
	variable  goto 34
	parenthesage  goto 35
	expression  goto 44
	binary_operation  goto 37
	ifthenelse  goto 38


state 26
	selection_statement : IF PAR_OPEN . expression PAR_CLOSE stmt2  (33)
	selection_statement : IF PAR_OPEN . expression PAR_CLOSE BRACKET_OPEN stmt BRACKET_CLOSE ELSE BRACKET_OPEN stmt BRACKET_CLOSE  (34)

	BCONSTANT  shift 28
	INTCONSTANT  shift 29
	VAR  shift 30
	PAR_OPEN  shift 31
	IF  shift 32
	.  error

	constant  goto 33
	variable  goto 34
	parenthesage  goto 35
	expression  goto 45
	binary_operation  goto 37
	ifthenelse  goto 38


state 27
	while_statement : WHILE PAR_OPEN . expression PAR_CLOSE BRACKET_OPEN stmt BRACKET_CLOSE  (35)

	BCONSTANT  shift 28
	INTCONSTANT  shift 29
	VAR  shift 30
	PAR_OPEN  shift 31
	IF  shift 32
	.  error

	constant  goto 33
	variable  goto 34
	parenthesage  goto 35
	expression  goto 46
	binary_operation  goto 37
	ifthenelse  goto 38


state 28
	constant : BCONSTANT .  (2)

	.  reduce 2


state 29
	constant : INTCONSTANT .  (3)

	.  reduce 3


state 30
	variable : VAR .  (4)

	.  reduce 4


state 31
	parenthesage : PAR_OPEN . expression PAR_CLOSE  (5)

	BCONSTANT  shift 28
	INTCONSTANT  shift 29
	VAR  shift 30
	PAR_OPEN  shift 31
	IF  shift 32
	.  error

	constant  goto 33
	variable  goto 34
	parenthesage  goto 35
	expression  goto 47
	binary_operation  goto 37
	ifthenelse  goto 38


state 32
	ifthenelse : IF . expression BRACKET_OPEN expression BRACKET_CLOSE ELSE BRACKET_OPEN expression BRACKET_CLOSE  (17)

	BCONSTANT  shift 28
	INTCONSTANT  shift 29
	VAR  shift 30
	PAR_OPEN  shift 31
	IF  shift 32
	.  error

	constant  goto 33
	variable  goto 34
	parenthesage  goto 35
	expression  goto 48
	binary_operation  goto 37
	ifthenelse  goto 38


state 33
	expression : constant .  (18)

	.  reduce 18


state 34
	expression : variable .  (19)

	.  reduce 19


state 35
	expression : parenthesage .  (20)

	.  reduce 20


state 36
	binary_operation : expression . BA_ADD expression  (6)
	binary_operation : expression . BA_SUB expression  (7)
	binary_operation : expression . BA_MUL expression  (8)
	binary_operation : expression . BA_DIV expression  (9)
	binary_operation : expression . BA_MOD expression  (10)
	binary_operation : expression . BC_EG expression  (11)
	binary_operation : expression . BC_SUP_EG expression  (12)
	binary_operation : expression . BC_INF_EG expression  (13)
	binary_operation : expression . BC_SUP expression  (14)
	binary_operation : expression . BC_INF expression  (15)
	binary_operation : expression . BC_DIF expression  (16)
	return_statement : RETURN expression . SEMICOLON  (36)

	BC_EG  shift 49
	BC_SUP_EG  shift 50
	BC_INF_EG  shift 51
	BC_SUP  shift 52
	BC_INF  shift 53
	BC_DIF  shift 54
	BA_ADD  shift 55
	BA_SUB  shift 56
	BA_MUL  shift 57
	BA_DIV  shift 58
	BA_MOD  shift 59
	SEMICOLON  shift 60
	.  error


state 37
	expression : binary_operation .  (21)

	.  reduce 21


state 38
	expression : ifthenelse .  (22)

	.  reduce 22


state 39
	funDefinition : funDeclaration BRACKET_OPEN stmt BRACKET_CLOSE .  (43)

	.  reduce 43


40: shift/reduce conflict (shift 12, reduce 32) on VAR
40: shift/reduce conflict (shift 13, reduce 32) on IF
40: shift/reduce conflict (shift 14, reduce 32) on WHILE
40: shift/reduce conflict (shift 15, reduce 32) on RETURN
state 40
	seq : stmt . stmt  (32)
	seq : stmt stmt .  (32)

	VAR  shift 12
	IF  shift 13
	WHILE  shift 14
	RETURN  shift 15
	BRACKET_CLOSE  reduce 32

	stmt  goto 40
	seq  goto 17
	return_statement  goto 18
	while_statement  goto 19
	assign  goto 20
	selection_statement  goto 21


state 41
	varDeclaration : typeD VAR .  (39)

	.  reduce 39


state 42
	varListe : varDeclaration COMMA . varListe  (41)

	BoolT  shift 3
	IntT  shift 4
	.  error

	typeD  goto 22
	varDeclaration  goto 23
	varListe  goto 61


state 43
	funDeclaration : typeD VAR PAR_OPEN varListe PAR_CLOSE .  (42)

	.  reduce 42


state 44
	binary_operation : expression . BA_ADD expression  (6)
	binary_operation : expression . BA_SUB expression  (7)
	binary_operation : expression . BA_MUL expression  (8)
	binary_operation : expression . BA_DIV expression  (9)
	binary_operation : expression . BA_MOD expression  (10)
	binary_operation : expression . BC_EG expression  (11)
	binary_operation : expression . BC_SUP_EG expression  (12)
	binary_operation : expression . BC_INF_EG expression  (13)
	binary_operation : expression . BC_SUP expression  (14)
	binary_operation : expression . BC_INF expression  (15)
	binary_operation : expression . BC_DIF expression  (16)
	assign : VAR EG expression . SEMICOLON  (31)

	BC_EG  shift 49
	BC_SUP_EG  shift 50
	BC_INF_EG  shift 51
	BC_SUP  shift 52
	BC_INF  shift 53
	BC_DIF  shift 54
	BA_ADD  shift 55
	BA_SUB  shift 56
	BA_MUL  shift 57
	BA_DIV  shift 58
	BA_MOD  shift 59
	SEMICOLON  shift 62
	.  error


state 45
	binary_operation : expression . BA_ADD expression  (6)
	binary_operation : expression . BA_SUB expression  (7)
	binary_operation : expression . BA_MUL expression  (8)
	binary_operation : expression . BA_DIV expression  (9)
	binary_operation : expression . BA_MOD expression  (10)
	binary_operation : expression . BC_EG expression  (11)
	binary_operation : expression . BC_SUP_EG expression  (12)
	binary_operation : expression . BC_INF_EG expression  (13)
	binary_operation : expression . BC_SUP expression  (14)
	binary_operation : expression . BC_INF expression  (15)
	binary_operation : expression . BC_DIF expression  (16)
	selection_statement : IF PAR_OPEN expression . PAR_CLOSE stmt2  (33)
	selection_statement : IF PAR_OPEN expression . PAR_CLOSE BRACKET_OPEN stmt BRACKET_CLOSE ELSE BRACKET_OPEN stmt BRACKET_CLOSE  (34)

	BC_EG  shift 49
	BC_SUP_EG  shift 50
	BC_INF_EG  shift 51
	BC_SUP  shift 52
	BC_INF  shift 53
	BC_DIF  shift 54
	BA_ADD  shift 55
	BA_SUB  shift 56
	BA_MUL  shift 57
	BA_DIV  shift 58
	BA_MOD  shift 59
	PAR_CLOSE  shift 63
	.  error


state 46
	binary_operation : expression . BA_ADD expression  (6)
	binary_operation : expression . BA_SUB expression  (7)
	binary_operation : expression . BA_MUL expression  (8)
	binary_operation : expression . BA_DIV expression  (9)
	binary_operation : expression . BA_MOD expression  (10)
	binary_operation : expression . BC_EG expression  (11)
	binary_operation : expression . BC_SUP_EG expression  (12)
	binary_operation : expression . BC_INF_EG expression  (13)
	binary_operation : expression . BC_SUP expression  (14)
	binary_operation : expression . BC_INF expression  (15)
	binary_operation : expression . BC_DIF expression  (16)
	while_statement : WHILE PAR_OPEN expression . PAR_CLOSE BRACKET_OPEN stmt BRACKET_CLOSE  (35)

	BC_EG  shift 49
	BC_SUP_EG  shift 50
	BC_INF_EG  shift 51
	BC_SUP  shift 52
	BC_INF  shift 53
	BC_DIF  shift 54
	BA_ADD  shift 55
	BA_SUB  shift 56
	BA_MUL  shift 57
	BA_DIV  shift 58
	BA_MOD  shift 59
	PAR_CLOSE  shift 64
	.  error


state 47
	parenthesage : PAR_OPEN expression . PAR_CLOSE  (5)
	binary_operation : expression . BA_ADD expression  (6)
	binary_operation : expression . BA_SUB expression  (7)
	binary_operation : expression . BA_MUL expression  (8)
	binary_operation : expression . BA_DIV expression  (9)
	binary_operation : expression . BA_MOD expression  (10)
	binary_operation : expression . BC_EG expression  (11)
	binary_operation : expression . BC_SUP_EG expression  (12)
	binary_operation : expression . BC_INF_EG expression  (13)
	binary_operation : expression . BC_SUP expression  (14)
	binary_operation : expression . BC_INF expression  (15)
	binary_operation : expression . BC_DIF expression  (16)

	BC_EG  shift 49
	BC_SUP_EG  shift 50
	BC_INF_EG  shift 51
	BC_SUP  shift 52
	BC_INF  shift 53
	BC_DIF  shift 54
	BA_ADD  shift 55
	BA_SUB  shift 56
	BA_MUL  shift 57
	BA_DIV  shift 58
	BA_MOD  shift 59
	PAR_CLOSE  shift 65
	.  error


state 48
	binary_operation : expression . BA_ADD expression  (6)
	binary_operation : expression . BA_SUB expression  (7)
	binary_operation : expression . BA_MUL expression  (8)
	binary_operation : expression . BA_DIV expression  (9)
	binary_operation : expression . BA_MOD expression  (10)
	binary_operation : expression . BC_EG expression  (11)
	binary_operation : expression . BC_SUP_EG expression  (12)
	binary_operation : expression . BC_INF_EG expression  (13)
	binary_operation : expression . BC_SUP expression  (14)
	binary_operation : expression . BC_INF expression  (15)
	binary_operation : expression . BC_DIF expression  (16)
	ifthenelse : IF expression . BRACKET_OPEN expression BRACKET_CLOSE ELSE BRACKET_OPEN expression BRACKET_CLOSE  (17)

	BC_EG  shift 49
	BC_SUP_EG  shift 50
	BC_INF_EG  shift 51
	BC_SUP  shift 52
	BC_INF  shift 53
	BC_DIF  shift 54
	BA_ADD  shift 55
	BA_SUB  shift 56
	BA_MUL  shift 57
	BA_DIV  shift 58
	BA_MOD  shift 59
	BRACKET_OPEN  shift 66
	.  error


state 49
	binary_operation : expression BC_EG . expression  (11)

	BCONSTANT  shift 28
	INTCONSTANT  shift 29
	VAR  shift 30
	PAR_OPEN  shift 31
	IF  shift 32
	.  error

	constant  goto 33
	variable  goto 34
	parenthesage  goto 35
	expression  goto 67
	binary_operation  goto 37
	ifthenelse  goto 38


state 50
	binary_operation : expression BC_SUP_EG . expression  (12)

	BCONSTANT  shift 28
	INTCONSTANT  shift 29
	VAR  shift 30
	PAR_OPEN  shift 31
	IF  shift 32
	.  error

	constant  goto 33
	variable  goto 34
	parenthesage  goto 35
	expression  goto 68
	binary_operation  goto 37
	ifthenelse  goto 38


state 51
	binary_operation : expression BC_INF_EG . expression  (13)

	BCONSTANT  shift 28
	INTCONSTANT  shift 29
	VAR  shift 30
	PAR_OPEN  shift 31
	IF  shift 32
	.  error

	constant  goto 33
	variable  goto 34
	parenthesage  goto 35
	expression  goto 69
	binary_operation  goto 37
	ifthenelse  goto 38


state 52
	binary_operation : expression BC_SUP . expression  (14)

	BCONSTANT  shift 28
	INTCONSTANT  shift 29
	VAR  shift 30
	PAR_OPEN  shift 31
	IF  shift 32
	.  error

	constant  goto 33
	variable  goto 34
	parenthesage  goto 35
	expression  goto 70
	binary_operation  goto 37
	ifthenelse  goto 38


state 53
	binary_operation : expression BC_INF . expression  (15)

	BCONSTANT  shift 28
	INTCONSTANT  shift 29
	VAR  shift 30
	PAR_OPEN  shift 31
	IF  shift 32
	.  error

	constant  goto 33
	variable  goto 34
	parenthesage  goto 35
	expression  goto 71
	binary_operation  goto 37
	ifthenelse  goto 38


state 54
	binary_operation : expression BC_DIF . expression  (16)

	BCONSTANT  shift 28
	INTCONSTANT  shift 29
	VAR  shift 30
	PAR_OPEN  shift 31
	IF  shift 32
	.  error

	constant  goto 33
	variable  goto 34
	parenthesage  goto 35
	expression  goto 72
	binary_operation  goto 37
	ifthenelse  goto 38


state 55
	binary_operation : expression BA_ADD . expression  (6)

	BCONSTANT  shift 28
	INTCONSTANT  shift 29
	VAR  shift 30
	PAR_OPEN  shift 31
	IF  shift 32
	.  error

	constant  goto 33
	variable  goto 34
	parenthesage  goto 35
	expression  goto 73
	binary_operation  goto 37
	ifthenelse  goto 38


state 56
	binary_operation : expression BA_SUB . expression  (7)

	BCONSTANT  shift 28
	INTCONSTANT  shift 29
	VAR  shift 30
	PAR_OPEN  shift 31
	IF  shift 32
	.  error

	constant  goto 33
	variable  goto 34
	parenthesage  goto 35
	expression  goto 74
	binary_operation  goto 37
	ifthenelse  goto 38


state 57
	binary_operation : expression BA_MUL . expression  (8)

	BCONSTANT  shift 28
	INTCONSTANT  shift 29
	VAR  shift 30
	PAR_OPEN  shift 31
	IF  shift 32
	.  error

	constant  goto 33
	variable  goto 34
	parenthesage  goto 35
	expression  goto 75
	binary_operation  goto 37
	ifthenelse  goto 38


state 58
	binary_operation : expression BA_DIV . expression  (9)

	BCONSTANT  shift 28
	INTCONSTANT  shift 29
	VAR  shift 30
	PAR_OPEN  shift 31
	IF  shift 32
	.  error

	constant  goto 33
	variable  goto 34
	parenthesage  goto 35
	expression  goto 76
	binary_operation  goto 37
	ifthenelse  goto 38


state 59
	binary_operation : expression BA_MOD . expression  (10)

	BCONSTANT  shift 28
	INTCONSTANT  shift 29
	VAR  shift 30
	PAR_OPEN  shift 31
	IF  shift 32
	.  error

	constant  goto 33
	variable  goto 34
	parenthesage  goto 35
	expression  goto 77
	binary_operation  goto 37
	ifthenelse  goto 38


state 60
	return_statement : RETURN expression SEMICOLON .  (36)

	.  reduce 36


state 61
	varListe : varDeclaration COMMA varListe .  (41)

	.  reduce 41


state 62
	assign : VAR EG expression SEMICOLON .  (31)

	.  reduce 31


state 63
	selection_statement : IF PAR_OPEN expression PAR_CLOSE . stmt2  (33)
	selection_statement : IF PAR_OPEN expression PAR_CLOSE . BRACKET_OPEN stmt BRACKET_CLOSE ELSE BRACKET_OPEN stmt BRACKET_CLOSE  (34)

	VAR  shift 12
	BRACKET_OPEN  shift 78
	WHILE  shift 14
	RETURN  shift 15
	.  error

	return_statement  goto 79
	while_statement  goto 80
	assign  goto 81
	stmt2  goto 82


state 64
	while_statement : WHILE PAR_OPEN expression PAR_CLOSE . BRACKET_OPEN stmt BRACKET_CLOSE  (35)

	BRACKET_OPEN  shift 83
	.  error


state 65
	parenthesage : PAR_OPEN expression PAR_CLOSE .  (5)

	.  reduce 5


state 66
	ifthenelse : IF expression BRACKET_OPEN . expression BRACKET_CLOSE ELSE BRACKET_OPEN expression BRACKET_CLOSE  (17)

	BCONSTANT  shift 28
	INTCONSTANT  shift 29
	VAR  shift 30
	PAR_OPEN  shift 31
	IF  shift 32
	.  error

	constant  goto 33
	variable  goto 34
	parenthesage  goto 35
	expression  goto 84
	binary_operation  goto 37
	ifthenelse  goto 38


state 67
	binary_operation : expression . BA_ADD expression  (6)
	binary_operation : expression . BA_SUB expression  (7)
	binary_operation : expression . BA_MUL expression  (8)
	binary_operation : expression . BA_DIV expression  (9)
	binary_operation : expression . BA_MOD expression  (10)
	binary_operation : expression . BC_EG expression  (11)
	binary_operation : expression BC_EG expression .  (11)
	binary_operation : expression . BC_SUP_EG expression  (12)
	binary_operation : expression . BC_INF_EG expression  (13)
	binary_operation : expression . BC_SUP expression  (14)
	binary_operation : expression . BC_INF expression  (15)
	binary_operation : expression . BC_DIF expression  (16)

	BC_EG  shift 49
	BC_SUP_EG  shift 50
	BC_INF_EG  shift 51
	BC_SUP  shift 52
	BC_INF  shift 53
	BC_DIF  shift 54
	BA_ADD  shift 55
	BA_SUB  shift 56
	BA_MUL  shift 57
	BA_DIV  shift 58
	BA_MOD  shift 59
	PAR_CLOSE  reduce 11
	BRACKET_OPEN  reduce 11
	BRACKET_CLOSE  reduce 11
	SEMICOLON  reduce 11


state 68
	binary_operation : expression . BA_ADD expression  (6)
	binary_operation : expression . BA_SUB expression  (7)
	binary_operation : expression . BA_MUL expression  (8)
	binary_operation : expression . BA_DIV expression  (9)
	binary_operation : expression . BA_MOD expression  (10)
	binary_operation : expression . BC_EG expression  (11)
	binary_operation : expression . BC_SUP_EG expression  (12)
	binary_operation : expression BC_SUP_EG expression .  (12)
	binary_operation : expression . BC_INF_EG expression  (13)
	binary_operation : expression . BC_SUP expression  (14)
	binary_operation : expression . BC_INF expression  (15)
	binary_operation : expression . BC_DIF expression  (16)

	BC_EG  shift 49
	BC_SUP_EG  shift 50
	BC_INF_EG  shift 51
	BC_SUP  shift 52
	BC_INF  shift 53
	BC_DIF  shift 54
	BA_ADD  shift 55
	BA_SUB  shift 56
	BA_MUL  shift 57
	BA_DIV  shift 58
	BA_MOD  shift 59
	PAR_CLOSE  reduce 12
	BRACKET_OPEN  reduce 12
	BRACKET_CLOSE  reduce 12
	SEMICOLON  reduce 12


state 69
	binary_operation : expression . BA_ADD expression  (6)
	binary_operation : expression . BA_SUB expression  (7)
	binary_operation : expression . BA_MUL expression  (8)
	binary_operation : expression . BA_DIV expression  (9)
	binary_operation : expression . BA_MOD expression  (10)
	binary_operation : expression . BC_EG expression  (11)
	binary_operation : expression . BC_SUP_EG expression  (12)
	binary_operation : expression . BC_INF_EG expression  (13)
	binary_operation : expression BC_INF_EG expression .  (13)
	binary_operation : expression . BC_SUP expression  (14)
	binary_operation : expression . BC_INF expression  (15)
	binary_operation : expression . BC_DIF expression  (16)

	BC_EG  shift 49
	BC_SUP_EG  shift 50
	BC_INF_EG  shift 51
	BC_SUP  shift 52
	BC_INF  shift 53
	BC_DIF  shift 54
	BA_ADD  shift 55
	BA_SUB  shift 56
	BA_MUL  shift 57
	BA_DIV  shift 58
	BA_MOD  shift 59
	PAR_CLOSE  reduce 13
	BRACKET_OPEN  reduce 13
	BRACKET_CLOSE  reduce 13
	SEMICOLON  reduce 13


state 70
	binary_operation : expression . BA_ADD expression  (6)
	binary_operation : expression . BA_SUB expression  (7)
	binary_operation : expression . BA_MUL expression  (8)
	binary_operation : expression . BA_DIV expression  (9)
	binary_operation : expression . BA_MOD expression  (10)
	binary_operation : expression . BC_EG expression  (11)
	binary_operation : expression . BC_SUP_EG expression  (12)
	binary_operation : expression . BC_INF_EG expression  (13)
	binary_operation : expression . BC_SUP expression  (14)
	binary_operation : expression BC_SUP expression .  (14)
	binary_operation : expression . BC_INF expression  (15)
	binary_operation : expression . BC_DIF expression  (16)

	BC_EG  shift 49
	BC_SUP_EG  shift 50
	BC_INF_EG  shift 51
	BC_SUP  shift 52
	BC_INF  shift 53
	BC_DIF  shift 54
	BA_ADD  shift 55
	BA_SUB  shift 56
	BA_MUL  shift 57
	BA_DIV  shift 58
	BA_MOD  shift 59
	PAR_CLOSE  reduce 14
	BRACKET_OPEN  reduce 14
	BRACKET_CLOSE  reduce 14
	SEMICOLON  reduce 14


state 71
	binary_operation : expression . BA_ADD expression  (6)
	binary_operation : expression . BA_SUB expression  (7)
	binary_operation : expression . BA_MUL expression  (8)
	binary_operation : expression . BA_DIV expression  (9)
	binary_operation : expression . BA_MOD expression  (10)
	binary_operation : expression . BC_EG expression  (11)
	binary_operation : expression . BC_SUP_EG expression  (12)
	binary_operation : expression . BC_INF_EG expression  (13)
	binary_operation : expression . BC_SUP expression  (14)
	binary_operation : expression . BC_INF expression  (15)
	binary_operation : expression BC_INF expression .  (15)
	binary_operation : expression . BC_DIF expression  (16)

	BC_EG  shift 49
	BC_SUP_EG  shift 50
	BC_INF_EG  shift 51
	BC_SUP  shift 52
	BC_INF  shift 53
	BC_DIF  shift 54
	BA_ADD  shift 55
	BA_SUB  shift 56
	BA_MUL  shift 57
	BA_DIV  shift 58
	BA_MOD  shift 59
	PAR_CLOSE  reduce 15
	BRACKET_OPEN  reduce 15
	BRACKET_CLOSE  reduce 15
	SEMICOLON  reduce 15


state 72
	binary_operation : expression . BA_ADD expression  (6)
	binary_operation : expression . BA_SUB expression  (7)
	binary_operation : expression . BA_MUL expression  (8)
	binary_operation : expression . BA_DIV expression  (9)
	binary_operation : expression . BA_MOD expression  (10)
	binary_operation : expression . BC_EG expression  (11)
	binary_operation : expression . BC_SUP_EG expression  (12)
	binary_operation : expression . BC_INF_EG expression  (13)
	binary_operation : expression . BC_SUP expression  (14)
	binary_operation : expression . BC_INF expression  (15)
	binary_operation : expression . BC_DIF expression  (16)
	binary_operation : expression BC_DIF expression .  (16)

	BC_EG  shift 49
	BC_SUP_EG  shift 50
	BC_INF_EG  shift 51
	BC_SUP  shift 52
	BC_INF  shift 53
	BC_DIF  shift 54
	BA_ADD  shift 55
	BA_SUB  shift 56
	BA_MUL  shift 57
	BA_DIV  shift 58
	BA_MOD  shift 59
	PAR_CLOSE  reduce 16
	BRACKET_OPEN  reduce 16
	BRACKET_CLOSE  reduce 16
	SEMICOLON  reduce 16


state 73
	binary_operation : expression . BA_ADD expression  (6)
	binary_operation : expression BA_ADD expression .  (6)
	binary_operation : expression . BA_SUB expression  (7)
	binary_operation : expression . BA_MUL expression  (8)
	binary_operation : expression . BA_DIV expression  (9)
	binary_operation : expression . BA_MOD expression  (10)
	binary_operation : expression . BC_EG expression  (11)
	binary_operation : expression . BC_SUP_EG expression  (12)
	binary_operation : expression . BC_INF_EG expression  (13)
	binary_operation : expression . BC_SUP expression  (14)
	binary_operation : expression . BC_INF expression  (15)
	binary_operation : expression . BC_DIF expression  (16)

	BA_MUL  shift 57
	BA_DIV  shift 58
	BA_MOD  shift 59
	BC_EG  reduce 6
	BC_SUP_EG  reduce 6
	BC_INF_EG  reduce 6
	BC_SUP  reduce 6
	BC_INF  reduce 6
	BC_DIF  reduce 6
	BA_ADD  reduce 6
	BA_SUB  reduce 6
	PAR_CLOSE  reduce 6
	BRACKET_OPEN  reduce 6
	BRACKET_CLOSE  reduce 6
	SEMICOLON  reduce 6


state 74
	binary_operation : expression . BA_ADD expression  (6)
	binary_operation : expression . BA_SUB expression  (7)
	binary_operation : expression BA_SUB expression .  (7)
	binary_operation : expression . BA_MUL expression  (8)
	binary_operation : expression . BA_DIV expression  (9)
	binary_operation : expression . BA_MOD expression  (10)
	binary_operation : expression . BC_EG expression  (11)
	binary_operation : expression . BC_SUP_EG expression  (12)
	binary_operation : expression . BC_INF_EG expression  (13)
	binary_operation : expression . BC_SUP expression  (14)
	binary_operation : expression . BC_INF expression  (15)
	binary_operation : expression . BC_DIF expression  (16)

	BA_MUL  shift 57
	BA_DIV  shift 58
	BA_MOD  shift 59
	BC_EG  reduce 7
	BC_SUP_EG  reduce 7
	BC_INF_EG  reduce 7
	BC_SUP  reduce 7
	BC_INF  reduce 7
	BC_DIF  reduce 7
	BA_ADD  reduce 7
	BA_SUB  reduce 7
	PAR_CLOSE  reduce 7
	BRACKET_OPEN  reduce 7
	BRACKET_CLOSE  reduce 7
	SEMICOLON  reduce 7


state 75
	binary_operation : expression . BA_ADD expression  (6)
	binary_operation : expression . BA_SUB expression  (7)
	binary_operation : expression . BA_MUL expression  (8)
	binary_operation : expression BA_MUL expression .  (8)
	binary_operation : expression . BA_DIV expression  (9)
	binary_operation : expression . BA_MOD expression  (10)
	binary_operation : expression . BC_EG expression  (11)
	binary_operation : expression . BC_SUP_EG expression  (12)
	binary_operation : expression . BC_INF_EG expression  (13)
	binary_operation : expression . BC_SUP expression  (14)
	binary_operation : expression . BC_INF expression  (15)
	binary_operation : expression . BC_DIF expression  (16)

	.  reduce 8


state 76
	binary_operation : expression . BA_ADD expression  (6)
	binary_operation : expression . BA_SUB expression  (7)
	binary_operation : expression . BA_MUL expression  (8)
	binary_operation : expression . BA_DIV expression  (9)
	binary_operation : expression BA_DIV expression .  (9)
	binary_operation : expression . BA_MOD expression  (10)
	binary_operation : expression . BC_EG expression  (11)
	binary_operation : expression . BC_SUP_EG expression  (12)
	binary_operation : expression . BC_INF_EG expression  (13)
	binary_operation : expression . BC_SUP expression  (14)
	binary_operation : expression . BC_INF expression  (15)
	binary_operation : expression . BC_DIF expression  (16)

	.  reduce 9


state 77
	binary_operation : expression . BA_ADD expression  (6)
	binary_operation : expression . BA_SUB expression  (7)
	binary_operation : expression . BA_MUL expression  (8)
	binary_operation : expression . BA_DIV expression  (9)
	binary_operation : expression . BA_MOD expression  (10)
	binary_operation : expression BA_MOD expression .  (10)
	binary_operation : expression . BC_EG expression  (11)
	binary_operation : expression . BC_SUP_EG expression  (12)
	binary_operation : expression . BC_INF_EG expression  (13)
	binary_operation : expression . BC_SUP expression  (14)
	binary_operation : expression . BC_INF expression  (15)
	binary_operation : expression . BC_DIF expression  (16)

	.  reduce 10


state 78
	selection_statement : IF PAR_OPEN expression PAR_CLOSE BRACKET_OPEN . stmt BRACKET_CLOSE ELSE BRACKET_OPEN stmt BRACKET_CLOSE  (34)

	VAR  shift 12
	IF  shift 13
	WHILE  shift 14
	RETURN  shift 15
	.  error

	stmt  goto 85
	seq  goto 17
	return_statement  goto 18
	while_statement  goto 19
	assign  goto 20
	selection_statement  goto 21


state 79
	stmt2 : return_statement .  (28)

	.  reduce 28


state 80
	stmt2 : while_statement .  (29)

	.  reduce 29


state 81
	stmt2 : assign .  (30)

	.  reduce 30


state 82
	selection_statement : IF PAR_OPEN expression PAR_CLOSE stmt2 .  (33)

	.  reduce 33


state 83
	while_statement : WHILE PAR_OPEN expression PAR_CLOSE BRACKET_OPEN . stmt BRACKET_CLOSE  (35)

	VAR  shift 12
	IF  shift 13
	WHILE  shift 14
	RETURN  shift 15
	.  error

	stmt  goto 86
	seq  goto 17
	return_statement  goto 18
	while_statement  goto 19
	assign  goto 20
	selection_statement  goto 21


state 84
	binary_operation : expression . BA_ADD expression  (6)
	binary_operation : expression . BA_SUB expression  (7)
	binary_operation : expression . BA_MUL expression  (8)
	binary_operation : expression . BA_DIV expression  (9)
	binary_operation : expression . BA_MOD expression  (10)
	binary_operation : expression . BC_EG expression  (11)
	binary_operation : expression . BC_SUP_EG expression  (12)
	binary_operation : expression . BC_INF_EG expression  (13)
	binary_operation : expression . BC_SUP expression  (14)
	binary_operation : expression . BC_INF expression  (15)
	binary_operation : expression . BC_DIF expression  (16)
	ifthenelse : IF expression BRACKET_OPEN expression . BRACKET_CLOSE ELSE BRACKET_OPEN expression BRACKET_CLOSE  (17)

	BC_EG  shift 49
	BC_SUP_EG  shift 50
	BC_INF_EG  shift 51
	BC_SUP  shift 52
	BC_INF  shift 53
	BC_DIF  shift 54
	BA_ADD  shift 55
	BA_SUB  shift 56
	BA_MUL  shift 57
	BA_DIV  shift 58
	BA_MOD  shift 59
	BRACKET_CLOSE  shift 87
	.  error


state 85
	seq : stmt . stmt  (32)
	selection_statement : IF PAR_OPEN expression PAR_CLOSE BRACKET_OPEN stmt . BRACKET_CLOSE ELSE BRACKET_OPEN stmt BRACKET_CLOSE  (34)

	VAR  shift 12
	BRACKET_CLOSE  shift 88
	IF  shift 13
	WHILE  shift 14
	RETURN  shift 15
	.  error

	stmt  goto 40
	seq  goto 17
	return_statement  goto 18
	while_statement  goto 19
	assign  goto 20
	selection_statement  goto 21


state 86
	seq : stmt . stmt  (32)
	while_statement : WHILE PAR_OPEN expression PAR_CLOSE BRACKET_OPEN stmt . BRACKET_CLOSE  (35)

	VAR  shift 12
	BRACKET_CLOSE  shift 89
	IF  shift 13
	WHILE  shift 14
	RETURN  shift 15
	.  error

	stmt  goto 40
	seq  goto 17
	return_statement  goto 18
	while_statement  goto 19
	assign  goto 20
	selection_statement  goto 21


state 87
	ifthenelse : IF expression BRACKET_OPEN expression BRACKET_CLOSE . ELSE BRACKET_OPEN expression BRACKET_CLOSE  (17)

	ELSE  shift 90
	.  error


state 88
	selection_statement : IF PAR_OPEN expression PAR_CLOSE BRACKET_OPEN stmt BRACKET_CLOSE . ELSE BRACKET_OPEN stmt BRACKET_CLOSE  (34)

	ELSE  shift 91
	.  error


state 89
	while_statement : WHILE PAR_OPEN expression PAR_CLOSE BRACKET_OPEN stmt BRACKET_CLOSE .  (35)

	.  reduce 35


state 90
	ifthenelse : IF expression BRACKET_OPEN expression BRACKET_CLOSE ELSE . BRACKET_OPEN expression BRACKET_CLOSE  (17)

	BRACKET_OPEN  shift 92
	.  error


state 91
	selection_statement : IF PAR_OPEN expression PAR_CLOSE BRACKET_OPEN stmt BRACKET_CLOSE ELSE . BRACKET_OPEN stmt BRACKET_CLOSE  (34)

	BRACKET_OPEN  shift 93
	.  error


state 92
	ifthenelse : IF expression BRACKET_OPEN expression BRACKET_CLOSE ELSE BRACKET_OPEN . expression BRACKET_CLOSE  (17)

	BCONSTANT  shift 28
	INTCONSTANT  shift 29
	VAR  shift 30
	PAR_OPEN  shift 31
	IF  shift 32
	.  error

	constant  goto 33
	variable  goto 34
	parenthesage  goto 35
	expression  goto 94
	binary_operation  goto 37
	ifthenelse  goto 38


state 93
	selection_statement : IF PAR_OPEN expression PAR_CLOSE BRACKET_OPEN stmt BRACKET_CLOSE ELSE BRACKET_OPEN . stmt BRACKET_CLOSE  (34)

	VAR  shift 12
	IF  shift 13
	WHILE  shift 14
	RETURN  shift 15
	.  error

	stmt  goto 95
	seq  goto 17
	return_statement  goto 18
	while_statement  goto 19
	assign  goto 20
	selection_statement  goto 21


state 94
	binary_operation : expression . BA_ADD expression  (6)
	binary_operation : expression . BA_SUB expression  (7)
	binary_operation : expression . BA_MUL expression  (8)
	binary_operation : expression . BA_DIV expression  (9)
	binary_operation : expression . BA_MOD expression  (10)
	binary_operation : expression . BC_EG expression  (11)
	binary_operation : expression . BC_SUP_EG expression  (12)
	binary_operation : expression . BC_INF_EG expression  (13)
	binary_operation : expression . BC_SUP expression  (14)
	binary_operation : expression . BC_INF expression  (15)
	binary_operation : expression . BC_DIF expression  (16)
	ifthenelse : IF expression BRACKET_OPEN expression BRACKET_CLOSE ELSE BRACKET_OPEN expression . BRACKET_CLOSE  (17)

	BC_EG  shift 49
	BC_SUP_EG  shift 50
	BC_INF_EG  shift 51
	BC_SUP  shift 52
	BC_INF  shift 53
	BC_DIF  shift 54
	BA_ADD  shift 55
	BA_SUB  shift 56
	BA_MUL  shift 57
	BA_DIV  shift 58
	BA_MOD  shift 59
	BRACKET_CLOSE  shift 96
	.  error


state 95
	seq : stmt . stmt  (32)
	selection_statement : IF PAR_OPEN expression PAR_CLOSE BRACKET_OPEN stmt BRACKET_CLOSE ELSE BRACKET_OPEN stmt . BRACKET_CLOSE  (34)

	VAR  shift 12
	BRACKET_CLOSE  shift 97
	IF  shift 13
	WHILE  shift 14
	RETURN  shift 15
	.  error

	stmt  goto 40
	seq  goto 17
	return_statement  goto 18
	while_statement  goto 19
	assign  goto 20
	selection_statement  goto 21


state 96
	ifthenelse : IF expression BRACKET_OPEN expression BRACKET_CLOSE ELSE BRACKET_OPEN expression BRACKET_CLOSE .  (17)

	.  reduce 17


state 97
	selection_statement : IF PAR_OPEN expression PAR_CLOSE BRACKET_OPEN stmt BRACKET_CLOSE ELSE BRACKET_OPEN stmt BRACKET_CLOSE .  (34)

	.  reduce 34


State 40 contains 4 shift/reduce conflicts.


34 terminals, 21 nonterminals
45 grammar rules, 98 states
